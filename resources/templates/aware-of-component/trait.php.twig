{{ '<?php' }}

namespace {{ traitNamespace }};

/**
 * {{ title }} Trait
 *
 * @see \{{ interfaceNamespace }}\{{ interfaceClassName }}
 *
 * @author {{ include('partials/author-and-email.twig') }}
 * @package {{ traitNamespace }}
 */
trait {{ traitClassName }}
{
    {{ include('partials/property-description.twig') }}
    protected {{- dataType in ['mixed', 'callable'] ? ' ' : " ?#{dataType} " -}} ${{ coreProperty }} = null;

    {{ include('partials/set-method-description.twig') }}
    {{ include('partials/set-method.twig') }}
    {
        $this->{{ coreProperty }} = ${{ inputArgument }};

        return $this;
    }

    {{ include('partials/get-method-description.twig') }}
    {{ include('partials/get-method.twig') }}
    {
        if ( ! $this->has{{ propertyName }}()) {
            $this->set{{ propertyName }}($this->getDefault{{ propertyName }}());
        }
        return $this->{{ coreProperty }};
    }

    {{ include('partials/has-method-description.twig') }}
    {{ include('partials/has-method.twig') }}
    {
        return isset($this->{{ coreProperty }});
    }

    {{ include('partials/get-default-method-description.twig') }}
    {{ include('partials/get-default-method.twig') }}
    {
        return null;
    }
}
